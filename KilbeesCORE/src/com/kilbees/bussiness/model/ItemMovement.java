package com.kilbees.bussiness.model;
// default package
// Generated Sep 21, 2013 7:48:48 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ItemMovement generated by hbm2java
 */
@Entity
@Table(name = "ITEM_MOVEMENT")
public class ItemMovement implements java.io.Serializable {

	private ItemMovementId id;
	private DrugItemPharmacyUnit drugItemPharmacyUnit;
	private PharmacyUnit pharmacyUnit;
	private Date txnDate;
	private String txnNo;
	private BigDecimal txnType;
	private double quantity;
	private double currentQuantity;
	private String mapUnit;

	public ItemMovement() {
	}

	public ItemMovement(ItemMovementId id,
			DrugItemPharmacyUnit drugItemPharmacyUnit,
			PharmacyUnit pharmacyUnit, Date txnDate, String txnNo,
			BigDecimal txnType, double quantity, double currentQuantity) {
		this.id = id;
		this.drugItemPharmacyUnit = drugItemPharmacyUnit;
		this.pharmacyUnit = pharmacyUnit;
		this.txnDate = txnDate;
		this.txnNo = txnNo;
		this.txnType = txnType;
		this.quantity = quantity;
		this.currentQuantity = currentQuantity;
	}

	public ItemMovement(ItemMovementId id,
			DrugItemPharmacyUnit drugItemPharmacyUnit,
			PharmacyUnit pharmacyUnit, Date txnDate, String txnNo,
			BigDecimal txnType, double quantity, double currentQuantity,
			String mapUnit) {
		this.id = id;
		this.drugItemPharmacyUnit = drugItemPharmacyUnit;
		this.pharmacyUnit = pharmacyUnit;
		this.txnDate = txnDate;
		this.txnNo = txnNo;
		this.txnType = txnType;
		this.quantity = quantity;
		this.currentQuantity = currentQuantity;
		this.mapUnit = mapUnit;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "phUnitNo", column = @Column(name = "PH_UNIT_NO", nullable = false, length = 20)),
			@AttributeOverride(name = "itemMovementNo", column = @Column(name = "ITEM_MOVEMENT_NO", nullable = false, length = 35)) })
	public ItemMovementId getId() {
		return this.id;
	}

	public void setId(ItemMovementId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "UNIT_NO_ITEM", referencedColumnName = "UNIT_NO", nullable = false),
			@JoinColumn(name = "ITEM_NO", referencedColumnName = "ITEM_NO", nullable = false) })
	public DrugItemPharmacyUnit getDrugItemPharmacyUnit() {
		return this.drugItemPharmacyUnit;
	}

	public void setDrugItemPharmacyUnit(
			DrugItemPharmacyUnit drugItemPharmacyUnit) {
		this.drugItemPharmacyUnit = drugItemPharmacyUnit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PH_UNIT_NO", nullable = false, insertable = false, updatable = false)
	public PharmacyUnit getPharmacyUnit() {
		return this.pharmacyUnit;
	}

	public void setPharmacyUnit(PharmacyUnit pharmacyUnit) {
		this.pharmacyUnit = pharmacyUnit;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "TXN_DATE", nullable = false, length = 7)
	public Date getTxnDate() {
		return this.txnDate;
	}

	public void setTxnDate(Date txnDate) {
		this.txnDate = txnDate;
	}

	@Column(name = "TXN_NO", nullable = false, length = 20)
	public String getTxnNo() {
		return this.txnNo;
	}

	public void setTxnNo(String txnNo) {
		this.txnNo = txnNo;
	}

	@Column(name = "TXN_TYPE", nullable = false, precision = 38, scale = 0)
	public BigDecimal getTxnType() {
		return this.txnType;
	}

	public void setTxnType(BigDecimal txnType) {
		this.txnType = txnType;
	}

	@Column(name = "QUANTITY", nullable = false, precision = 126, scale = 0)
	public double getQuantity() {
		return this.quantity;
	}

	public void setQuantity(double quantity) {
		this.quantity = quantity;
	}

	@Column(name = "CURRENT_QUANTITY", nullable = false, precision = 126, scale = 0)
	public double getCurrentQuantity() {
		return this.currentQuantity;
	}

	public void setCurrentQuantity(double currentQuantity) {
		this.currentQuantity = currentQuantity;
	}

	@Column(name = "MAP_UNIT", length = 20)
	public String getMapUnit() {
		return this.mapUnit;
	}

	public void setMapUnit(String mapUnit) {
		this.mapUnit = mapUnit;
	}

}
